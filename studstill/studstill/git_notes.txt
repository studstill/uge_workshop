Git Notes

git ll - A Command unique to the fish shell that hows the git history with the appropriate labels

HEAD, and master - are labels
master - is a branch; which is made automatically

git branch - tells you which branch is the active one
git brance [NEW BANCH] - creates
git checkout [Branch] - switches to a new active branch (or label)

touch  - Creates a new file

also, the "dot" in the tab in Sublime means that the file has not yet been saved.


When you init a git - “git init” -  you created a staging area

The red x on the command line means that the staging area is “dirty” <— slang

git status - will tell you what’s up with the staging area **

git commit -m ‘add unix notes’

above: "git commit” commits changes the git “`Timeline”;   -m is a message that describes what changes are made in the commit.  You Must always create a message with -m; When writing the message, always write in the present tense or what you ARE DOING.  i.e. ‘make new piece of code,’ ‘add unix notes’ - you can use a single or a double quote, it doesn’t matter

Every Commit adds these 5 pieces of information to the timeline:
message
id
timestamp
changes
signature

git log - shows you the above information

order of commands:
git init
git add [FILE NAME]
git commit -m ‘YOUR NOTE HERE’

*you init a repository only once*

git st - is a shortcut for git status

To change things you do:
git status
git add
git commit


HEAD, and master - are labels
master - is a branch; which is made automatically

git branch - tells you which branch is the active one
git branch [NEW BANCH] - creates
git checkout [Branch] - switches to a new active branch (or label)

touch  - Creates a new file

git push -u origin master - only has to run once

git push - use this always after your first commit (using the command above)

git branch -d [BRANCH NAME] - deletes a branch

git merge BRANCHNAME - merges a subbranch into your current branch

